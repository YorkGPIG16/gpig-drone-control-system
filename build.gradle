group 'gpig.group2'

apply plugin: 'java'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    maven {
        url 'http://m2.j6mes.co/'
    }
}

dependencies {
    compile 'gpig.group2.models:drone-comms-model:1.2.25'
    compile 'gpig.group2:layer-services:1.1.34'
    compile 'gpig.group2.models:alerts-model:1.2.8'

    compile 'co.j6mes.infra.srf:service-registration-framework:1.0.1.8'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    compile 'org.apache.httpcomponents:fluent-hc:4.5.2'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
}


jar {
    manifest {
        attributes 'Implementation-Title': 'GPIG Drone Control System',
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion,
                'Main-Class': 'co.j6mes.infra.srf.daemon.ServiceRegistrationDaemon'
    }
}


task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Drone Simulator',
                'Implementation-Version': version,
                'Specification-Version': version,
                'Main-Class': 'gpig.group2.dcs.DCSDroneConnectionManager'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'GPIG Layers Service')
                root.appendNode('description', 'Layer services')
                root.appendNode('url', 'https://github.com/j6mes/gpig-layer-services')
                root.appendNode('inceptionYear', '2016')

                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/j6mes/gpig-layer-services')
                scm.appendNode('connection', 'scm:https://j6mes@github.com/j6mes/gpig-layer-services')
                scm.appendNode('developerConnection', 'scm:git://github.com/j6mes/gpig-layer-services')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developers = root.appendNode('developers')
                def j6mes = developers.appendNode('developer')
                j6mes.appendNode('id', 'j6mes')
                j6mes.appendNode('name', 'James Thorne')
                j6mes.appendNode('email', 'james@jthorne.co.uk')
            }
        }
    }
}